{"version":3,"file":"index.js","sources":["../../../src/apps/backend/message.ts","../../../node_modules/tsconfig-paths/lib/filesystem.js","../../../node_modules/tsconfig-paths/lib/mapping-entry.js","../../../node_modules/tsconfig-paths/lib/try-path.js","../../../node_modules/tsconfig-paths/lib/match-path-sync.js","../../../node_modules/tsconfig-paths/lib/match-path-async.js","../../../node_modules/json5/dist/index.mjs","../../../node_modules/strip-bom/index.js","../../../node_modules/tsconfig-paths/lib/tsconfig-loader.js","../../../node_modules/tsconfig-paths/lib/config-loader.js","../../../node_modules/minimist/index.js","../../../node_modules/tsconfig-paths/lib/register.js","../../../node_modules/tsconfig-paths/lib/index.js","../../../src/apps/backend/index.ts"],"sourcesContent":["import { BrowserWindow, ipcMain } from 'electron';\r\nimport {\r\n    ClientMessage,\r\n    ClientMessagePayloads,\r\n    ClientMessageType,\r\n    MainMessage,\r\n    MainMessagePayloads,\r\n    MainMessageType\r\n} from 'messages';\r\n\r\ntype MessageHandler<Type extends MainMessageType> = {\r\n    source: BrowserWindow | null;\r\n    callback: (message: MainMessagePayloads[Type]) => void;\r\n};\r\n\r\nexport default class Messager {\r\n    private static initialized: boolean = false;\r\n    private static handlers: Map<MainMessageType, MessageHandler<any>[]> = new Map();\r\n\r\n    static send<Type extends ClientMessageType>(\r\n        type: Type,\r\n        target: BrowserWindow,\r\n        message: ClientMessagePayloads[Type]\r\n    ): void;\r\n    static send<Type extends ClientMessageType>(type: Type, message: ClientMessagePayloads[Type]): void;\r\n    static send<Type extends ClientMessageType>(\r\n        type: Type,\r\n        dataOrTarget: ClientMessagePayloads[Type] | BrowserWindow,\r\n        data?: ClientMessagePayloads[Type]\r\n    ): void {\r\n        if (dataOrTarget instanceof BrowserWindow) {\r\n            if (!data) {\r\n                throw new Error('Message data not specified for target');\r\n            }\r\n            const message: ClientMessage<Type> = {\r\n                type,\r\n                payload: data\r\n            };\r\n            dataOrTarget.webContents.send('message', message);\r\n        } else {\r\n            const message: ClientMessage<Type> = {\r\n                type,\r\n                payload: dataOrTarget\r\n            };\r\n            BrowserWindow.getAllWindows().forEach(window => {\r\n                window.webContents.send('message', message);\r\n            });\r\n        }\r\n    }\r\n\r\n    static on<Type extends MainMessageType>(\r\n        message: Type,\r\n        from: BrowserWindow,\r\n        handler: (data: MainMessagePayloads[Type]) => void\r\n    ): () => void;\r\n    static on<Type extends MainMessageType>(\r\n        message: Type,\r\n        handler: (data: MainMessagePayloads[Type]) => void\r\n    ): () => void;\r\n    static on<Type extends MainMessageType>(\r\n        message: Type,\r\n        handlerOrSource: BrowserWindow | ((data: MainMessagePayloads[Type]) => void),\r\n        handler?: (data: MainMessagePayloads[Type]) => void\r\n    ): () => void {\r\n        let handlers = this.handlers.get(message);\r\n        if (!handlers) {\r\n            handlers = [];\r\n            this.handlers.set(message, handlers);\r\n        }\r\n\r\n        if (handlerOrSource instanceof BrowserWindow) {\r\n            if (!handler) {\r\n                throw new Error('Handler not specified for source');\r\n            }\r\n            handlers.push({ source: handlerOrSource, callback: handler });\r\n        } else {\r\n            handlers.push({ source: null, callback: handlerOrSource });\r\n        }\r\n\r\n        return () => {\r\n            const idx = handlers.findIndex(h => h.callback === handler);\r\n            if (idx === -1) return;\r\n\r\n            handlers.splice(idx, 1);\r\n\r\n            if (handlers.length === 0) this.handlers.delete(message);\r\n        };\r\n    }\r\n\r\n    static initialize(): void {\r\n        if (this.initialized) return;\r\n        this.initialized = true;\r\n\r\n        ipcMain.handle('message', (event, message: MainMessage<any>) => {\r\n            const handlers = this.handlers.get(message.type);\r\n            if (!handlers) return;\r\n            for (const handler of handlers) {\r\n                try {\r\n                    if (handler.source && handler.source.webContents.id !== event.sender.id) continue;\r\n                    handler.callback(message);\r\n                } catch (error) {\r\n                    console.error(`Error handling message ${message.type}`, error);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeExtension = exports.fileExistsAsync = exports.readJsonFromDiskAsync = exports.readJsonFromDiskSync = exports.fileExistsSync = void 0;\nvar fs = require(\"fs\");\nfunction fileExistsSync(path) {\n    // If the file doesn't exist, avoid throwing an exception over the native barrier for every miss\n    if (!fs.existsSync(path)) {\n        return false;\n    }\n    try {\n        var stats = fs.statSync(path);\n        return stats.isFile();\n    }\n    catch (err) {\n        // If error, assume file did not exist\n        return false;\n    }\n}\nexports.fileExistsSync = fileExistsSync;\n/**\n * Reads package.json from disk\n *\n * @param file Path to package.json\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction readJsonFromDiskSync(packageJsonPath) {\n    if (!fs.existsSync(packageJsonPath)) {\n        return undefined;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    return require(packageJsonPath);\n}\nexports.readJsonFromDiskSync = readJsonFromDiskSync;\nfunction readJsonFromDiskAsync(path, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ncallback) {\n    fs.readFile(path, \"utf8\", function (err, result) {\n        // If error, assume file did not exist\n        if (err || !result) {\n            return callback();\n        }\n        var json = JSON.parse(result);\n        return callback(undefined, json);\n    });\n}\nexports.readJsonFromDiskAsync = readJsonFromDiskAsync;\nfunction fileExistsAsync(path2, callback2) {\n    fs.stat(path2, function (err, stats) {\n        if (err) {\n            // If error assume file does not exist\n            return callback2(undefined, false);\n        }\n        callback2(undefined, stats ? stats.isFile() : false);\n    });\n}\nexports.fileExistsAsync = fileExistsAsync;\nfunction removeExtension(path) {\n    return path.substring(0, path.lastIndexOf(\".\")) || path;\n}\nexports.removeExtension = removeExtension;\n//# sourceMappingURL=filesystem.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAbsoluteMappingEntries = void 0;\nvar path = require(\"path\");\n/**\n * Converts an absolute baseUrl and paths to an array of absolute mapping entries.\n * The array is sorted by longest prefix.\n * Having an array with entries allows us to keep a sorting order rather than\n * sort by keys each time we use the mappings.\n *\n * @param absoluteBaseUrl\n * @param paths\n * @param addMatchAll\n */\nfunction getAbsoluteMappingEntries(absoluteBaseUrl, paths, addMatchAll) {\n    // Resolve all paths to absolute form once here, and sort them by\n    // longest prefix once here, this saves time on each request later.\n    // We need to put them in an array to preserve the sorting order.\n    var sortedKeys = sortByLongestPrefix(Object.keys(paths));\n    var absolutePaths = [];\n    for (var _i = 0, sortedKeys_1 = sortedKeys; _i < sortedKeys_1.length; _i++) {\n        var key = sortedKeys_1[_i];\n        absolutePaths.push({\n            pattern: key,\n            paths: paths[key].map(function (pathToResolve) {\n                return path.resolve(absoluteBaseUrl, pathToResolve);\n            }),\n        });\n    }\n    // If there is no match-all path specified in the paths section of tsconfig, then try to match\n    // all paths relative to baseUrl, this is how typescript works.\n    if (!paths[\"*\"] && addMatchAll) {\n        absolutePaths.push({\n            pattern: \"*\",\n            paths: [\"\".concat(absoluteBaseUrl.replace(/\\/$/, \"\"), \"/*\")],\n        });\n    }\n    return absolutePaths;\n}\nexports.getAbsoluteMappingEntries = getAbsoluteMappingEntries;\n/**\n * Sort path patterns.\n * If a module name can be matched with multiple patterns then pattern with the longest prefix will be picked.\n */\nfunction sortByLongestPrefix(arr) {\n    return arr\n        .concat()\n        .sort(function (a, b) { return getPrefixLength(b) - getPrefixLength(a); });\n}\nfunction getPrefixLength(pattern) {\n    var prefixLength = pattern.indexOf(\"*\");\n    return pattern.substr(0, prefixLength).length;\n}\n//# sourceMappingURL=mapping-entry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.exhaustiveTypeException = exports.getStrippedPath = exports.getPathsToTry = void 0;\nvar path = require(\"path\");\nvar path_1 = require(\"path\");\nvar filesystem_1 = require(\"./filesystem\");\n/**\n * Builds a list of all physical paths to try by:\n * 1. Check for file named exactly as request.\n * 2. Check for files named as request ending in any of the extensions.\n * 3. Check for file specified in package.json's main property.\n * 4. Check for files named as request ending in \"index\" with any of the extensions.\n */\nfunction getPathsToTry(extensions, absolutePathMappings, requestedModule) {\n    if (!absolutePathMappings || !requestedModule || requestedModule[0] === \".\") {\n        return undefined;\n    }\n    var pathsToTry = [];\n    for (var _i = 0, absolutePathMappings_1 = absolutePathMappings; _i < absolutePathMappings_1.length; _i++) {\n        var entry = absolutePathMappings_1[_i];\n        var starMatch = entry.pattern === requestedModule\n            ? \"\"\n            : matchStar(entry.pattern, requestedModule);\n        if (starMatch !== undefined) {\n            var _loop_1 = function (physicalPathPattern) {\n                var physicalPath = physicalPathPattern.replace(\"*\", starMatch);\n                pathsToTry.push({ type: \"file\", path: physicalPath });\n                pathsToTry.push.apply(pathsToTry, extensions.map(function (e) { return ({ type: \"extension\", path: physicalPath + e }); }));\n                pathsToTry.push({\n                    type: \"package\",\n                    path: path.join(physicalPath, \"/package.json\"),\n                });\n                var indexPath = path.join(physicalPath, \"/index\");\n                pathsToTry.push.apply(pathsToTry, extensions.map(function (e) { return ({ type: \"index\", path: indexPath + e }); }));\n            };\n            for (var _a = 0, _b = entry.paths; _a < _b.length; _a++) {\n                var physicalPathPattern = _b[_a];\n                _loop_1(physicalPathPattern);\n            }\n        }\n    }\n    return pathsToTry.length === 0 ? undefined : pathsToTry;\n}\nexports.getPathsToTry = getPathsToTry;\n// Not sure why we don't just return the full found path?\nfunction getStrippedPath(tryPath) {\n    return tryPath.type === \"index\"\n        ? (0, path_1.dirname)(tryPath.path)\n        : tryPath.type === \"file\"\n            ? tryPath.path\n            : tryPath.type === \"extension\"\n                ? (0, filesystem_1.removeExtension)(tryPath.path)\n                : tryPath.type === \"package\"\n                    ? tryPath.path\n                    : exhaustiveTypeException(tryPath.type);\n}\nexports.getStrippedPath = getStrippedPath;\nfunction exhaustiveTypeException(check) {\n    throw new Error(\"Unknown type \".concat(check));\n}\nexports.exhaustiveTypeException = exhaustiveTypeException;\n/**\n * Matches pattern with a single star against search.\n * Star must match at least one character to be considered a match.\n *\n * @param patttern for example \"foo*\"\n * @param search for example \"fooawesomebar\"\n * @returns the part of search that * matches, or undefined if no match.\n */\nfunction matchStar(pattern, search) {\n    if (search.length < pattern.length) {\n        return undefined;\n    }\n    if (pattern === \"*\") {\n        return search;\n    }\n    var star = pattern.indexOf(\"*\");\n    if (star === -1) {\n        return undefined;\n    }\n    var part1 = pattern.substring(0, star);\n    var part2 = pattern.substring(star + 1);\n    if (search.substr(0, star) !== part1) {\n        return undefined;\n    }\n    if (search.substr(search.length - part2.length) !== part2) {\n        return undefined;\n    }\n    return search.substr(star, search.length - part2.length);\n}\n//# sourceMappingURL=try-path.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.matchFromAbsolutePaths = exports.createMatchPath = void 0;\nvar path = require(\"path\");\nvar Filesystem = require(\"./filesystem\");\nvar MappingEntry = require(\"./mapping-entry\");\nvar TryPath = require(\"./try-path\");\n/**\n * Creates a function that can resolve paths according to tsconfig paths property.\n *\n * @param absoluteBaseUrl Absolute version of baseUrl as specified in tsconfig.\n * @param paths The paths as specified in tsconfig.\n * @param mainFields A list of package.json field names to try when resolving module files. Select a nested field using an array of field names.\n * @param addMatchAll Add a match-all \"*\" rule if none is present\n * @returns a function that can resolve paths.\n */\nfunction createMatchPath(absoluteBaseUrl, paths, mainFields, addMatchAll) {\n    if (mainFields === void 0) { mainFields = [\"main\"]; }\n    if (addMatchAll === void 0) { addMatchAll = true; }\n    var absolutePaths = MappingEntry.getAbsoluteMappingEntries(absoluteBaseUrl, paths, addMatchAll);\n    return function (requestedModule, readJson, fileExists, extensions) {\n        return matchFromAbsolutePaths(absolutePaths, requestedModule, readJson, fileExists, extensions, mainFields);\n    };\n}\nexports.createMatchPath = createMatchPath;\n/**\n * Finds a path from tsconfig that matches a module load request.\n *\n * @param absolutePathMappings The paths to try as specified in tsconfig but resolved to absolute form.\n * @param requestedModule The required module name.\n * @param readJson Function that can read json from a path (useful for testing).\n * @param fileExists Function that checks for existence of a file at a path (useful for testing).\n * @param extensions File extensions to probe for (useful for testing).\n * @param mainFields A list of package.json field names to try when resolving module files. Select a nested field using an array of field names.\n * @returns the found path, or undefined if no path was found.\n */\nfunction matchFromAbsolutePaths(absolutePathMappings, requestedModule, readJson, fileExists, extensions, mainFields) {\n    if (readJson === void 0) { readJson = Filesystem.readJsonFromDiskSync; }\n    if (fileExists === void 0) { fileExists = Filesystem.fileExistsSync; }\n    if (extensions === void 0) { extensions = Object.keys(require.extensions); }\n    if (mainFields === void 0) { mainFields = [\"main\"]; }\n    var tryPaths = TryPath.getPathsToTry(extensions, absolutePathMappings, requestedModule);\n    if (!tryPaths) {\n        return undefined;\n    }\n    return findFirstExistingPath(tryPaths, readJson, fileExists, mainFields);\n}\nexports.matchFromAbsolutePaths = matchFromAbsolutePaths;\nfunction findFirstExistingMainFieldMappedFile(packageJson, mainFields, packageJsonPath, fileExists) {\n    for (var index = 0; index < mainFields.length; index++) {\n        var mainFieldSelector = mainFields[index];\n        var candidateMapping = typeof mainFieldSelector === \"string\"\n            ? packageJson[mainFieldSelector]\n            : mainFieldSelector.reduce(function (obj, key) { return obj[key]; }, packageJson);\n        if (candidateMapping && typeof candidateMapping === \"string\") {\n            var candidateFilePath = path.join(path.dirname(packageJsonPath), candidateMapping);\n            if (fileExists(candidateFilePath)) {\n                return candidateFilePath;\n            }\n        }\n    }\n    return undefined;\n}\nfunction findFirstExistingPath(tryPaths, readJson, fileExists, mainFields) {\n    if (readJson === void 0) { readJson = Filesystem.readJsonFromDiskSync; }\n    if (mainFields === void 0) { mainFields = [\"main\"]; }\n    for (var _i = 0, tryPaths_1 = tryPaths; _i < tryPaths_1.length; _i++) {\n        var tryPath = tryPaths_1[_i];\n        if (tryPath.type === \"file\" ||\n            tryPath.type === \"extension\" ||\n            tryPath.type === \"index\") {\n            if (fileExists(tryPath.path)) {\n                return TryPath.getStrippedPath(tryPath);\n            }\n        }\n        else if (tryPath.type === \"package\") {\n            var packageJson = readJson(tryPath.path);\n            if (packageJson) {\n                var mainFieldMappedFile = findFirstExistingMainFieldMappedFile(packageJson, mainFields, tryPath.path, fileExists);\n                if (mainFieldMappedFile) {\n                    return mainFieldMappedFile;\n                }\n            }\n        }\n        else {\n            TryPath.exhaustiveTypeException(tryPath.type);\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=match-path-sync.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.matchFromAbsolutePathsAsync = exports.createMatchPathAsync = void 0;\nvar path = require(\"path\");\nvar TryPath = require(\"./try-path\");\nvar MappingEntry = require(\"./mapping-entry\");\nvar Filesystem = require(\"./filesystem\");\n/**\n * See the sync version for docs.\n */\nfunction createMatchPathAsync(absoluteBaseUrl, paths, mainFields, addMatchAll) {\n    if (mainFields === void 0) { mainFields = [\"main\"]; }\n    if (addMatchAll === void 0) { addMatchAll = true; }\n    var absolutePaths = MappingEntry.getAbsoluteMappingEntries(absoluteBaseUrl, paths, addMatchAll);\n    return function (requestedModule, readJson, fileExists, extensions, callback) {\n        return matchFromAbsolutePathsAsync(absolutePaths, requestedModule, readJson, fileExists, extensions, callback, mainFields);\n    };\n}\nexports.createMatchPathAsync = createMatchPathAsync;\n/**\n * See the sync version for docs.\n */\nfunction matchFromAbsolutePathsAsync(absolutePathMappings, requestedModule, readJson, fileExists, extensions, callback, mainFields) {\n    if (readJson === void 0) { readJson = Filesystem.readJsonFromDiskAsync; }\n    if (fileExists === void 0) { fileExists = Filesystem.fileExistsAsync; }\n    if (extensions === void 0) { extensions = Object.keys(require.extensions); }\n    if (mainFields === void 0) { mainFields = [\"main\"]; }\n    var tryPaths = TryPath.getPathsToTry(extensions, absolutePathMappings, requestedModule);\n    if (!tryPaths) {\n        return callback();\n    }\n    findFirstExistingPath(tryPaths, readJson, fileExists, callback, 0, mainFields);\n}\nexports.matchFromAbsolutePathsAsync = matchFromAbsolutePathsAsync;\nfunction findFirstExistingMainFieldMappedFile(packageJson, mainFields, packageJsonPath, fileExistsAsync, doneCallback, index) {\n    if (index === void 0) { index = 0; }\n    if (index >= mainFields.length) {\n        return doneCallback(undefined, undefined);\n    }\n    var tryNext = function () {\n        return findFirstExistingMainFieldMappedFile(packageJson, mainFields, packageJsonPath, fileExistsAsync, doneCallback, index + 1);\n    };\n    var mainFieldSelector = mainFields[index];\n    var mainFieldMapping = typeof mainFieldSelector === \"string\"\n        ? packageJson[mainFieldSelector]\n        : mainFieldSelector.reduce(function (obj, key) { return obj[key]; }, packageJson);\n    if (typeof mainFieldMapping !== \"string\") {\n        // Skip mappings that are not pointers to replacement files\n        return tryNext();\n    }\n    var mappedFilePath = path.join(path.dirname(packageJsonPath), mainFieldMapping);\n    fileExistsAsync(mappedFilePath, function (err, exists) {\n        if (err) {\n            return doneCallback(err);\n        }\n        if (exists) {\n            return doneCallback(undefined, mappedFilePath);\n        }\n        return tryNext();\n    });\n}\n// Recursive loop to probe for physical files\nfunction findFirstExistingPath(tryPaths, readJson, fileExists, doneCallback, index, mainFields) {\n    if (index === void 0) { index = 0; }\n    if (mainFields === void 0) { mainFields = [\"main\"]; }\n    var tryPath = tryPaths[index];\n    if (tryPath.type === \"file\" ||\n        tryPath.type === \"extension\" ||\n        tryPath.type === \"index\") {\n        fileExists(tryPath.path, function (err, exists) {\n            if (err) {\n                return doneCallback(err);\n            }\n            if (exists) {\n                return doneCallback(undefined, TryPath.getStrippedPath(tryPath));\n            }\n            if (index === tryPaths.length - 1) {\n                return doneCallback();\n            }\n            // Continue with the next path\n            return findFirstExistingPath(tryPaths, readJson, fileExists, doneCallback, index + 1, mainFields);\n        });\n    }\n    else if (tryPath.type === \"package\") {\n        readJson(tryPath.path, function (err, packageJson) {\n            if (err) {\n                return doneCallback(err);\n            }\n            if (packageJson) {\n                return findFirstExistingMainFieldMappedFile(packageJson, mainFields, tryPath.path, fileExists, function (mainFieldErr, mainFieldMappedFile) {\n                    if (mainFieldErr) {\n                        return doneCallback(mainFieldErr);\n                    }\n                    if (mainFieldMappedFile) {\n                        return doneCallback(undefined, mainFieldMappedFile);\n                    }\n                    // No field in package json was a valid option. Continue with the next path.\n                    return findFirstExistingPath(tryPaths, readJson, fileExists, doneCallback, index + 1, mainFields);\n                });\n            }\n            // This is async code, we need to return unconditionally, otherwise the code still falls\n            // through and keeps recursing. While this might work in general, libraries that use neo-async\n            // like Webpack will actually not allow you to call the same callback twice.\n            //\n            // An example of where this caused issues:\n            // https://github.com/dividab/tsconfig-paths-webpack-plugin/issues/11\n            //\n            // Continue with the next path\n            return findFirstExistingPath(tryPaths, readJson, fileExists, doneCallback, index + 1, mainFields);\n        });\n    }\n    else {\n        TryPath.exhaustiveTypeException(tryPath.type);\n    }\n}\n//# sourceMappingURL=match-path-async.js.map","// This is a generated file. Do not edit.\nvar Space_Separator = /[\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\nvar ID_Start = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/;\nvar ID_Continue = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF9\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE83\\uDE86-\\uDE99\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nvar unicode = {\n\tSpace_Separator: Space_Separator,\n\tID_Start: ID_Start,\n\tID_Continue: ID_Continue\n};\n\nvar util = {\n    isSpaceSeparator (c) {\n        return typeof c === 'string' && unicode.Space_Separator.test(c)\n    },\n\n    isIdStartChar (c) {\n        return typeof c === 'string' && (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c === '$') || (c === '_') ||\n        unicode.ID_Start.test(c)\n        )\n    },\n\n    isIdContinueChar (c) {\n        return typeof c === 'string' && (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c >= '0' && c <= '9') ||\n        (c === '$') || (c === '_') ||\n        (c === '\\u200C') || (c === '\\u200D') ||\n        unicode.ID_Continue.test(c)\n        )\n    },\n\n    isDigit (c) {\n        return typeof c === 'string' && /[0-9]/.test(c)\n    },\n\n    isHexDigit (c) {\n        return typeof c === 'string' && /[0-9A-Fa-f]/.test(c)\n    },\n};\n\nlet source;\nlet parseState;\nlet stack;\nlet pos;\nlet line;\nlet column;\nlet token;\nlet key;\nlet root;\n\nvar parse = function parse (text, reviver) {\n    source = String(text);\n    parseState = 'start';\n    stack = [];\n    pos = 0;\n    line = 1;\n    column = 0;\n    token = undefined;\n    key = undefined;\n    root = undefined;\n\n    do {\n        token = lex();\n\n        // This code is unreachable.\n        // if (!parseStates[parseState]) {\n        //     throw invalidParseState()\n        // }\n\n        parseStates[parseState]();\n    } while (token.type !== 'eof')\n\n    if (typeof reviver === 'function') {\n        return internalize({'': root}, '', reviver)\n    }\n\n    return root\n};\n\nfunction internalize (holder, name, reviver) {\n    const value = holder[name];\n    if (value != null && typeof value === 'object') {\n        if (Array.isArray(value)) {\n            for (let i = 0; i < value.length; i++) {\n                const key = String(i);\n                const replacement = internalize(value, key, reviver);\n                if (replacement === undefined) {\n                    delete value[key];\n                } else {\n                    Object.defineProperty(value, key, {\n                        value: replacement,\n                        writable: true,\n                        enumerable: true,\n                        configurable: true,\n                    });\n                }\n            }\n        } else {\n            for (const key in value) {\n                const replacement = internalize(value, key, reviver);\n                if (replacement === undefined) {\n                    delete value[key];\n                } else {\n                    Object.defineProperty(value, key, {\n                        value: replacement,\n                        writable: true,\n                        enumerable: true,\n                        configurable: true,\n                    });\n                }\n            }\n        }\n    }\n\n    return reviver.call(holder, name, value)\n}\n\nlet lexState;\nlet buffer;\nlet doubleQuote;\nlet sign;\nlet c;\n\nfunction lex () {\n    lexState = 'default';\n    buffer = '';\n    doubleQuote = false;\n    sign = 1;\n\n    for (;;) {\n        c = peek();\n\n        // This code is unreachable.\n        // if (!lexStates[lexState]) {\n        //     throw invalidLexState(lexState)\n        // }\n\n        const token = lexStates[lexState]();\n        if (token) {\n            return token\n        }\n    }\n}\n\nfunction peek () {\n    if (source[pos]) {\n        return String.fromCodePoint(source.codePointAt(pos))\n    }\n}\n\nfunction read () {\n    const c = peek();\n\n    if (c === '\\n') {\n        line++;\n        column = 0;\n    } else if (c) {\n        column += c.length;\n    } else {\n        column++;\n    }\n\n    if (c) {\n        pos += c.length;\n    }\n\n    return c\n}\n\nconst lexStates = {\n    default () {\n        switch (c) {\n        case '\\t':\n        case '\\v':\n        case '\\f':\n        case ' ':\n        case '\\u00A0':\n        case '\\uFEFF':\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n            read();\n            return\n\n        case '/':\n            read();\n            lexState = 'comment';\n            return\n\n        case undefined:\n            read();\n            return newToken('eof')\n        }\n\n        if (util.isSpaceSeparator(c)) {\n            read();\n            return\n        }\n\n        // This code is unreachable.\n        // if (!lexStates[parseState]) {\n        //     throw invalidLexState(parseState)\n        // }\n\n        return lexStates[parseState]()\n    },\n\n    comment () {\n        switch (c) {\n        case '*':\n            read();\n            lexState = 'multiLineComment';\n            return\n\n        case '/':\n            read();\n            lexState = 'singleLineComment';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    multiLineComment () {\n        switch (c) {\n        case '*':\n            read();\n            lexState = 'multiLineCommentAsterisk';\n            return\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        read();\n    },\n\n    multiLineCommentAsterisk () {\n        switch (c) {\n        case '*':\n            read();\n            return\n\n        case '/':\n            read();\n            lexState = 'default';\n            return\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        read();\n        lexState = 'multiLineComment';\n    },\n\n    singleLineComment () {\n        switch (c) {\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n            read();\n            lexState = 'default';\n            return\n\n        case undefined:\n            read();\n            return newToken('eof')\n        }\n\n        read();\n    },\n\n    value () {\n        switch (c) {\n        case '{':\n        case '[':\n            return newToken('punctuator', read())\n\n        case 'n':\n            read();\n            literal('ull');\n            return newToken('null', null)\n\n        case 't':\n            read();\n            literal('rue');\n            return newToken('boolean', true)\n\n        case 'f':\n            read();\n            literal('alse');\n            return newToken('boolean', false)\n\n        case '-':\n        case '+':\n            if (read() === '-') {\n                sign = -1;\n            }\n\n            lexState = 'sign';\n            return\n\n        case '.':\n            buffer = read();\n            lexState = 'decimalPointLeading';\n            return\n\n        case '0':\n            buffer = read();\n            lexState = 'zero';\n            return\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            buffer = read();\n            lexState = 'decimalInteger';\n            return\n\n        case 'I':\n            read();\n            literal('nfinity');\n            return newToken('numeric', Infinity)\n\n        case 'N':\n            read();\n            literal('aN');\n            return newToken('numeric', NaN)\n\n        case '\"':\n        case \"'\":\n            doubleQuote = (read() === '\"');\n            buffer = '';\n            lexState = 'string';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    identifierNameStartEscape () {\n        if (c !== 'u') {\n            throw invalidChar(read())\n        }\n\n        read();\n        const u = unicodeEscape();\n        switch (u) {\n        case '$':\n        case '_':\n            break\n\n        default:\n            if (!util.isIdStartChar(u)) {\n                throw invalidIdentifier()\n            }\n\n            break\n        }\n\n        buffer += u;\n        lexState = 'identifierName';\n    },\n\n    identifierName () {\n        switch (c) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n            buffer += read();\n            return\n\n        case '\\\\':\n            read();\n            lexState = 'identifierNameEscape';\n            return\n        }\n\n        if (util.isIdContinueChar(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('identifier', buffer)\n    },\n\n    identifierNameEscape () {\n        if (c !== 'u') {\n            throw invalidChar(read())\n        }\n\n        read();\n        const u = unicodeEscape();\n        switch (u) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n            break\n\n        default:\n            if (!util.isIdContinueChar(u)) {\n                throw invalidIdentifier()\n            }\n\n            break\n        }\n\n        buffer += u;\n        lexState = 'identifierName';\n    },\n\n    sign () {\n        switch (c) {\n        case '.':\n            buffer = read();\n            lexState = 'decimalPointLeading';\n            return\n\n        case '0':\n            buffer = read();\n            lexState = 'zero';\n            return\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            buffer = read();\n            lexState = 'decimalInteger';\n            return\n\n        case 'I':\n            read();\n            literal('nfinity');\n            return newToken('numeric', sign * Infinity)\n\n        case 'N':\n            read();\n            literal('aN');\n            return newToken('numeric', NaN)\n        }\n\n        throw invalidChar(read())\n    },\n\n    zero () {\n        switch (c) {\n        case '.':\n            buffer += read();\n            lexState = 'decimalPoint';\n            return\n\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n\n        case 'x':\n        case 'X':\n            buffer += read();\n            lexState = 'hexadecimal';\n            return\n        }\n\n        return newToken('numeric', sign * 0)\n    },\n\n    decimalInteger () {\n        switch (c) {\n        case '.':\n            buffer += read();\n            lexState = 'decimalPoint';\n            return\n\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalPointLeading () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalFraction';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalPoint () {\n        switch (c) {\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalFraction';\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalFraction () {\n        switch (c) {\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalExponent () {\n        switch (c) {\n        case '+':\n        case '-':\n            buffer += read();\n            lexState = 'decimalExponentSign';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalExponentInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalExponentSign () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalExponentInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalExponentInteger () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    hexadecimal () {\n        if (util.isHexDigit(c)) {\n            buffer += read();\n            lexState = 'hexadecimalInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    hexadecimalInteger () {\n        if (util.isHexDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    string () {\n        switch (c) {\n        case '\\\\':\n            read();\n            buffer += escape();\n            return\n\n        case '\"':\n            if (doubleQuote) {\n                read();\n                return newToken('string', buffer)\n            }\n\n            buffer += read();\n            return\n\n        case \"'\":\n            if (!doubleQuote) {\n                read();\n                return newToken('string', buffer)\n            }\n\n            buffer += read();\n            return\n\n        case '\\n':\n        case '\\r':\n            throw invalidChar(read())\n\n        case '\\u2028':\n        case '\\u2029':\n            separatorChar(c);\n            break\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        buffer += read();\n    },\n\n    start () {\n        switch (c) {\n        case '{':\n        case '[':\n            return newToken('punctuator', read())\n\n        // This code is unreachable since the default lexState handles eof.\n        // case undefined:\n        //     return newToken('eof')\n        }\n\n        lexState = 'value';\n    },\n\n    beforePropertyName () {\n        switch (c) {\n        case '$':\n        case '_':\n            buffer = read();\n            lexState = 'identifierName';\n            return\n\n        case '\\\\':\n            read();\n            lexState = 'identifierNameStartEscape';\n            return\n\n        case '}':\n            return newToken('punctuator', read())\n\n        case '\"':\n        case \"'\":\n            doubleQuote = (read() === '\"');\n            lexState = 'string';\n            return\n        }\n\n        if (util.isIdStartChar(c)) {\n            buffer += read();\n            lexState = 'identifierName';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    afterPropertyName () {\n        if (c === ':') {\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    beforePropertyValue () {\n        lexState = 'value';\n    },\n\n    afterPropertyValue () {\n        switch (c) {\n        case ',':\n        case '}':\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    beforeArrayValue () {\n        if (c === ']') {\n            return newToken('punctuator', read())\n        }\n\n        lexState = 'value';\n    },\n\n    afterArrayValue () {\n        switch (c) {\n        case ',':\n        case ']':\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    end () {\n        // This code is unreachable since it's handled by the default lexState.\n        // if (c === undefined) {\n        //     read()\n        //     return newToken('eof')\n        // }\n\n        throw invalidChar(read())\n    },\n};\n\nfunction newToken (type, value) {\n    return {\n        type,\n        value,\n        line,\n        column,\n    }\n}\n\nfunction literal (s) {\n    for (const c of s) {\n        const p = peek();\n\n        if (p !== c) {\n            throw invalidChar(read())\n        }\n\n        read();\n    }\n}\n\nfunction escape () {\n    const c = peek();\n    switch (c) {\n    case 'b':\n        read();\n        return '\\b'\n\n    case 'f':\n        read();\n        return '\\f'\n\n    case 'n':\n        read();\n        return '\\n'\n\n    case 'r':\n        read();\n        return '\\r'\n\n    case 't':\n        read();\n        return '\\t'\n\n    case 'v':\n        read();\n        return '\\v'\n\n    case '0':\n        read();\n        if (util.isDigit(peek())) {\n            throw invalidChar(read())\n        }\n\n        return '\\0'\n\n    case 'x':\n        read();\n        return hexEscape()\n\n    case 'u':\n        read();\n        return unicodeEscape()\n\n    case '\\n':\n    case '\\u2028':\n    case '\\u2029':\n        read();\n        return ''\n\n    case '\\r':\n        read();\n        if (peek() === '\\n') {\n            read();\n        }\n\n        return ''\n\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n    case '9':\n        throw invalidChar(read())\n\n    case undefined:\n        throw invalidChar(read())\n    }\n\n    return read()\n}\n\nfunction hexEscape () {\n    let buffer = '';\n    let c = peek();\n\n    if (!util.isHexDigit(c)) {\n        throw invalidChar(read())\n    }\n\n    buffer += read();\n\n    c = peek();\n    if (!util.isHexDigit(c)) {\n        throw invalidChar(read())\n    }\n\n    buffer += read();\n\n    return String.fromCodePoint(parseInt(buffer, 16))\n}\n\nfunction unicodeEscape () {\n    let buffer = '';\n    let count = 4;\n\n    while (count-- > 0) {\n        const c = peek();\n        if (!util.isHexDigit(c)) {\n            throw invalidChar(read())\n        }\n\n        buffer += read();\n    }\n\n    return String.fromCodePoint(parseInt(buffer, 16))\n}\n\nconst parseStates = {\n    start () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        push();\n    },\n\n    beforePropertyName () {\n        switch (token.type) {\n        case 'identifier':\n        case 'string':\n            key = token.value;\n            parseState = 'afterPropertyName';\n            return\n\n        case 'punctuator':\n            // This code is unreachable since it's handled by the lexState.\n            // if (token.value !== '}') {\n            //     throw invalidToken()\n            // }\n\n            pop();\n            return\n\n        case 'eof':\n            throw invalidEOF()\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    afterPropertyName () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator' || token.value !== ':') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        parseState = 'beforePropertyValue';\n    },\n\n    beforePropertyValue () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        push();\n    },\n\n    beforeArrayValue () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        if (token.type === 'punctuator' && token.value === ']') {\n            pop();\n            return\n        }\n\n        push();\n    },\n\n    afterPropertyValue () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        switch (token.value) {\n        case ',':\n            parseState = 'beforePropertyName';\n            return\n\n        case '}':\n            pop();\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    afterArrayValue () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        switch (token.value) {\n        case ',':\n            parseState = 'beforeArrayValue';\n            return\n\n        case ']':\n            pop();\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    end () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'eof') {\n        //     throw invalidToken()\n        // }\n    },\n};\n\nfunction push () {\n    let value;\n\n    switch (token.type) {\n    case 'punctuator':\n        switch (token.value) {\n        case '{':\n            value = {};\n            break\n\n        case '[':\n            value = [];\n            break\n        }\n\n        break\n\n    case 'null':\n    case 'boolean':\n    case 'numeric':\n    case 'string':\n        value = token.value;\n        break\n\n    // This code is unreachable.\n    // default:\n    //     throw invalidToken()\n    }\n\n    if (root === undefined) {\n        root = value;\n    } else {\n        const parent = stack[stack.length - 1];\n        if (Array.isArray(parent)) {\n            parent.push(value);\n        } else {\n            Object.defineProperty(parent, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true,\n            });\n        }\n    }\n\n    if (value !== null && typeof value === 'object') {\n        stack.push(value);\n\n        if (Array.isArray(value)) {\n            parseState = 'beforeArrayValue';\n        } else {\n            parseState = 'beforePropertyName';\n        }\n    } else {\n        const current = stack[stack.length - 1];\n        if (current == null) {\n            parseState = 'end';\n        } else if (Array.isArray(current)) {\n            parseState = 'afterArrayValue';\n        } else {\n            parseState = 'afterPropertyValue';\n        }\n    }\n}\n\nfunction pop () {\n    stack.pop();\n\n    const current = stack[stack.length - 1];\n    if (current == null) {\n        parseState = 'end';\n    } else if (Array.isArray(current)) {\n        parseState = 'afterArrayValue';\n    } else {\n        parseState = 'afterPropertyValue';\n    }\n}\n\n// This code is unreachable.\n// function invalidParseState () {\n//     return new Error(`JSON5: invalid parse state '${parseState}'`)\n// }\n\n// This code is unreachable.\n// function invalidLexState (state) {\n//     return new Error(`JSON5: invalid lex state '${state}'`)\n// }\n\nfunction invalidChar (c) {\n    if (c === undefined) {\n        return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n    }\n\n    return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n}\n\nfunction invalidEOF () {\n    return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n}\n\n// This code is unreachable.\n// function invalidToken () {\n//     if (token.type === 'eof') {\n//         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n//     }\n\n//     const c = String.fromCodePoint(token.value.codePointAt(0))\n//     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n// }\n\nfunction invalidIdentifier () {\n    column -= 5;\n    return syntaxError(`JSON5: invalid identifier character at ${line}:${column}`)\n}\n\nfunction separatorChar (c) {\n    console.warn(`JSON5: '${formatChar(c)}' in strings is not valid ECMAScript; consider escaping`);\n}\n\nfunction formatChar (c) {\n    const replacements = {\n        \"'\": \"\\\\'\",\n        '\"': '\\\\\"',\n        '\\\\': '\\\\\\\\',\n        '\\b': '\\\\b',\n        '\\f': '\\\\f',\n        '\\n': '\\\\n',\n        '\\r': '\\\\r',\n        '\\t': '\\\\t',\n        '\\v': '\\\\v',\n        '\\0': '\\\\0',\n        '\\u2028': '\\\\u2028',\n        '\\u2029': '\\\\u2029',\n    };\n\n    if (replacements[c]) {\n        return replacements[c]\n    }\n\n    if (c < ' ') {\n        const hexString = c.charCodeAt(0).toString(16);\n        return '\\\\x' + ('00' + hexString).substring(hexString.length)\n    }\n\n    return c\n}\n\nfunction syntaxError (message) {\n    const err = new SyntaxError(message);\n    err.lineNumber = line;\n    err.columnNumber = column;\n    return err\n}\n\nvar stringify = function stringify (value, replacer, space) {\n    const stack = [];\n    let indent = '';\n    let propertyList;\n    let replacerFunc;\n    let gap = '';\n    let quote;\n\n    if (\n        replacer != null &&\n        typeof replacer === 'object' &&\n        !Array.isArray(replacer)\n    ) {\n        space = replacer.space;\n        quote = replacer.quote;\n        replacer = replacer.replacer;\n    }\n\n    if (typeof replacer === 'function') {\n        replacerFunc = replacer;\n    } else if (Array.isArray(replacer)) {\n        propertyList = [];\n        for (const v of replacer) {\n            let item;\n\n            if (typeof v === 'string') {\n                item = v;\n            } else if (\n                typeof v === 'number' ||\n                v instanceof String ||\n                v instanceof Number\n            ) {\n                item = String(v);\n            }\n\n            if (item !== undefined && propertyList.indexOf(item) < 0) {\n                propertyList.push(item);\n            }\n        }\n    }\n\n    if (space instanceof Number) {\n        space = Number(space);\n    } else if (space instanceof String) {\n        space = String(space);\n    }\n\n    if (typeof space === 'number') {\n        if (space > 0) {\n            space = Math.min(10, Math.floor(space));\n            gap = '          '.substr(0, space);\n        }\n    } else if (typeof space === 'string') {\n        gap = space.substr(0, 10);\n    }\n\n    return serializeProperty('', {'': value})\n\n    function serializeProperty (key, holder) {\n        let value = holder[key];\n        if (value != null) {\n            if (typeof value.toJSON5 === 'function') {\n                value = value.toJSON5(key);\n            } else if (typeof value.toJSON === 'function') {\n                value = value.toJSON(key);\n            }\n        }\n\n        if (replacerFunc) {\n            value = replacerFunc.call(holder, key, value);\n        }\n\n        if (value instanceof Number) {\n            value = Number(value);\n        } else if (value instanceof String) {\n            value = String(value);\n        } else if (value instanceof Boolean) {\n            value = value.valueOf();\n        }\n\n        switch (value) {\n        case null: return 'null'\n        case true: return 'true'\n        case false: return 'false'\n        }\n\n        if (typeof value === 'string') {\n            return quoteString(value, false)\n        }\n\n        if (typeof value === 'number') {\n            return String(value)\n        }\n\n        if (typeof value === 'object') {\n            return Array.isArray(value) ? serializeArray(value) : serializeObject(value)\n        }\n\n        return undefined\n    }\n\n    function quoteString (value) {\n        const quotes = {\n            \"'\": 0.1,\n            '\"': 0.2,\n        };\n\n        const replacements = {\n            \"'\": \"\\\\'\",\n            '\"': '\\\\\"',\n            '\\\\': '\\\\\\\\',\n            '\\b': '\\\\b',\n            '\\f': '\\\\f',\n            '\\n': '\\\\n',\n            '\\r': '\\\\r',\n            '\\t': '\\\\t',\n            '\\v': '\\\\v',\n            '\\0': '\\\\0',\n            '\\u2028': '\\\\u2028',\n            '\\u2029': '\\\\u2029',\n        };\n\n        let product = '';\n\n        for (let i = 0; i < value.length; i++) {\n            const c = value[i];\n            switch (c) {\n            case \"'\":\n            case '\"':\n                quotes[c]++;\n                product += c;\n                continue\n\n            case '\\0':\n                if (util.isDigit(value[i + 1])) {\n                    product += '\\\\x00';\n                    continue\n                }\n            }\n\n            if (replacements[c]) {\n                product += replacements[c];\n                continue\n            }\n\n            if (c < ' ') {\n                let hexString = c.charCodeAt(0).toString(16);\n                product += '\\\\x' + ('00' + hexString).substring(hexString.length);\n                continue\n            }\n\n            product += c;\n        }\n\n        const quoteChar = quote || Object.keys(quotes).reduce((a, b) => (quotes[a] < quotes[b]) ? a : b);\n\n        product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar]);\n\n        return quoteChar + product + quoteChar\n    }\n\n    function serializeObject (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value);\n\n        let stepback = indent;\n        indent = indent + gap;\n\n        let keys = propertyList || Object.keys(value);\n        let partial = [];\n        for (const key of keys) {\n            const propertyString = serializeProperty(key, value);\n            if (propertyString !== undefined) {\n                let member = serializeKey(key) + ':';\n                if (gap !== '') {\n                    member += ' ';\n                }\n                member += propertyString;\n                partial.push(member);\n            }\n        }\n\n        let final;\n        if (partial.length === 0) {\n            final = '{}';\n        } else {\n            let properties;\n            if (gap === '') {\n                properties = partial.join(',');\n                final = '{' + properties + '}';\n            } else {\n                let separator = ',\\n' + indent;\n                properties = partial.join(separator);\n                final = '{\\n' + indent + properties + ',\\n' + stepback + '}';\n            }\n        }\n\n        stack.pop();\n        indent = stepback;\n        return final\n    }\n\n    function serializeKey (key) {\n        if (key.length === 0) {\n            return quoteString(key, true)\n        }\n\n        const firstChar = String.fromCodePoint(key.codePointAt(0));\n        if (!util.isIdStartChar(firstChar)) {\n            return quoteString(key, true)\n        }\n\n        for (let i = firstChar.length; i < key.length; i++) {\n            if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {\n                return quoteString(key, true)\n            }\n        }\n\n        return key\n    }\n\n    function serializeArray (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value);\n\n        let stepback = indent;\n        indent = indent + gap;\n\n        let partial = [];\n        for (let i = 0; i < value.length; i++) {\n            const propertyString = serializeProperty(String(i), value);\n            partial.push((propertyString !== undefined) ? propertyString : 'null');\n        }\n\n        let final;\n        if (partial.length === 0) {\n            final = '[]';\n        } else {\n            if (gap === '') {\n                let properties = partial.join(',');\n                final = '[' + properties + ']';\n            } else {\n                let separator = ',\\n' + indent;\n                let properties = partial.join(separator);\n                final = '[\\n' + indent + properties + ',\\n' + stepback + ']';\n            }\n        }\n\n        stack.pop();\n        indent = stepback;\n        return final\n    }\n};\n\nconst JSON5 = {\n    parse,\n    stringify,\n};\n\nvar lib = JSON5;\n\nexport default lib;\n","'use strict';\nmodule.exports = x => {\n\tif (typeof x !== 'string') {\n\t\tthrow new TypeError('Expected a string, got ' + typeof x);\n\t}\n\n\t// Catches EFBBBF (UTF-8 BOM) because the buffer-to-string\n\t// conversion translates it to FEFF (UTF-16 BOM)\n\tif (x.charCodeAt(0) === 0xFEFF) {\n\t\treturn x.slice(1);\n\t}\n\n\treturn x;\n};\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadTsconfig = exports.walkForTsConfig = exports.tsConfigLoader = void 0;\nvar path = require(\"path\");\nvar fs = require(\"fs\");\n// eslint-disable-next-line @typescript-eslint/no-require-imports\nvar JSON5 = require(\"json5\");\n// eslint-disable-next-line @typescript-eslint/no-require-imports\nvar StripBom = require(\"strip-bom\");\nfunction tsConfigLoader(_a) {\n    var getEnv = _a.getEnv, cwd = _a.cwd, _b = _a.loadSync, loadSync = _b === void 0 ? loadSyncDefault : _b;\n    var TS_NODE_PROJECT = getEnv(\"TS_NODE_PROJECT\");\n    var TS_NODE_BASEURL = getEnv(\"TS_NODE_BASEURL\");\n    // tsconfig.loadSync handles if TS_NODE_PROJECT is a file or directory\n    // and also overrides baseURL if TS_NODE_BASEURL is available.\n    var loadResult = loadSync(cwd, TS_NODE_PROJECT, TS_NODE_BASEURL);\n    return loadResult;\n}\nexports.tsConfigLoader = tsConfigLoader;\nfunction loadSyncDefault(cwd, filename, baseUrl) {\n    // Tsconfig.loadSync uses path.resolve. This is why we can use an absolute path as filename\n    var configPath = resolveConfigPath(cwd, filename);\n    if (!configPath) {\n        return {\n            tsConfigPath: undefined,\n            baseUrl: undefined,\n            paths: undefined,\n        };\n    }\n    var config = loadTsconfig(configPath);\n    return {\n        tsConfigPath: configPath,\n        baseUrl: baseUrl ||\n            (config && config.compilerOptions && config.compilerOptions.baseUrl),\n        paths: config && config.compilerOptions && config.compilerOptions.paths,\n    };\n}\nfunction resolveConfigPath(cwd, filename) {\n    if (filename) {\n        var absolutePath = fs.lstatSync(filename).isDirectory()\n            ? path.resolve(filename, \"./tsconfig.json\")\n            : path.resolve(cwd, filename);\n        return absolutePath;\n    }\n    if (fs.statSync(cwd).isFile()) {\n        return path.resolve(cwd);\n    }\n    var configAbsolutePath = walkForTsConfig(cwd);\n    return configAbsolutePath ? path.resolve(configAbsolutePath) : undefined;\n}\nfunction walkForTsConfig(directory, readdirSync) {\n    if (readdirSync === void 0) { readdirSync = fs.readdirSync; }\n    var files = readdirSync(directory);\n    var filesToCheck = [\"tsconfig.json\", \"jsconfig.json\"];\n    for (var _i = 0, filesToCheck_1 = filesToCheck; _i < filesToCheck_1.length; _i++) {\n        var fileToCheck = filesToCheck_1[_i];\n        if (files.indexOf(fileToCheck) !== -1) {\n            return path.join(directory, fileToCheck);\n        }\n    }\n    var parentDirectory = path.dirname(directory);\n    // If we reached the top\n    if (directory === parentDirectory) {\n        return undefined;\n    }\n    return walkForTsConfig(parentDirectory, readdirSync);\n}\nexports.walkForTsConfig = walkForTsConfig;\nfunction loadTsconfig(configFilePath, \n// eslint-disable-next-line no-shadow\nexistsSync, readFileSync) {\n    if (existsSync === void 0) { existsSync = fs.existsSync; }\n    if (readFileSync === void 0) { readFileSync = function (filename) {\n        return fs.readFileSync(filename, \"utf8\");\n    }; }\n    if (!existsSync(configFilePath)) {\n        return undefined;\n    }\n    var configString = readFileSync(configFilePath);\n    var cleanedJson = StripBom(configString);\n    var config;\n    try {\n        config = JSON5.parse(cleanedJson);\n    }\n    catch (e) {\n        throw new Error(\"\".concat(configFilePath, \" is malformed \").concat(e.message));\n    }\n    var extendedConfig = config.extends;\n    if (extendedConfig) {\n        var base = void 0;\n        if (Array.isArray(extendedConfig)) {\n            base = extendedConfig.reduce(function (currBase, extendedConfigElement) {\n                return mergeTsconfigs(currBase, loadTsconfigFromExtends(configFilePath, extendedConfigElement, existsSync, readFileSync));\n            }, {});\n        }\n        else {\n            base = loadTsconfigFromExtends(configFilePath, extendedConfig, existsSync, readFileSync);\n        }\n        return mergeTsconfigs(base, config);\n    }\n    return config;\n}\nexports.loadTsconfig = loadTsconfig;\n/**\n * Intended to be called only from loadTsconfig.\n * Parameters don't have defaults because they should use the same as loadTsconfig.\n */\nfunction loadTsconfigFromExtends(configFilePath, extendedConfigValue, \n// eslint-disable-next-line no-shadow\nexistsSync, readFileSync) {\n    var _a;\n    if (typeof extendedConfigValue === \"string\" &&\n        extendedConfigValue.indexOf(\".json\") === -1) {\n        extendedConfigValue += \".json\";\n    }\n    var currentDir = path.dirname(configFilePath);\n    var extendedConfigPath = path.join(currentDir, extendedConfigValue);\n    if (extendedConfigValue.indexOf(\"/\") !== -1 &&\n        extendedConfigValue.indexOf(\".\") !== -1 &&\n        !existsSync(extendedConfigPath)) {\n        extendedConfigPath = path.join(currentDir, \"node_modules\", extendedConfigValue);\n    }\n    var config = loadTsconfig(extendedConfigPath, existsSync, readFileSync) || {};\n    // baseUrl should be interpreted as relative to extendedConfigPath,\n    // but we need to update it so it is relative to the original tsconfig being loaded\n    if ((_a = config.compilerOptions) === null || _a === void 0 ? void 0 : _a.baseUrl) {\n        var extendsDir = path.dirname(extendedConfigValue);\n        config.compilerOptions.baseUrl = path.join(extendsDir, config.compilerOptions.baseUrl);\n    }\n    return config;\n}\nfunction mergeTsconfigs(base, config) {\n    base = base || {};\n    config = config || {};\n    return __assign(__assign(__assign({}, base), config), { compilerOptions: __assign(__assign({}, base.compilerOptions), config.compilerOptions) });\n}\n//# sourceMappingURL=tsconfig-loader.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.configLoader = exports.loadConfig = void 0;\nvar TsConfigLoader2 = require(\"./tsconfig-loader\");\nvar path = require(\"path\");\nfunction loadConfig(cwd) {\n    if (cwd === void 0) { cwd = process.cwd(); }\n    return configLoader({ cwd: cwd });\n}\nexports.loadConfig = loadConfig;\nfunction configLoader(_a) {\n    var cwd = _a.cwd, explicitParams = _a.explicitParams, _b = _a.tsConfigLoader, tsConfigLoader = _b === void 0 ? TsConfigLoader2.tsConfigLoader : _b;\n    if (explicitParams) {\n        var absoluteBaseUrl = path.isAbsolute(explicitParams.baseUrl)\n            ? explicitParams.baseUrl\n            : path.join(cwd, explicitParams.baseUrl);\n        return {\n            resultType: \"success\",\n            configFileAbsolutePath: \"\",\n            baseUrl: explicitParams.baseUrl,\n            absoluteBaseUrl: absoluteBaseUrl,\n            paths: explicitParams.paths,\n            mainFields: explicitParams.mainFields,\n            addMatchAll: explicitParams.addMatchAll,\n        };\n    }\n    // Load tsconfig and create path matching function\n    var loadResult = tsConfigLoader({\n        cwd: cwd,\n        getEnv: function (key) { return process.env[key]; },\n    });\n    if (!loadResult.tsConfigPath) {\n        return {\n            resultType: \"failed\",\n            message: \"Couldn't find tsconfig.json\",\n        };\n    }\n    return {\n        resultType: \"success\",\n        configFileAbsolutePath: loadResult.tsConfigPath,\n        baseUrl: loadResult.baseUrl,\n        absoluteBaseUrl: path.resolve(path.dirname(loadResult.tsConfigPath), loadResult.baseUrl || \"\"),\n        paths: loadResult.paths || {},\n        addMatchAll: loadResult.baseUrl !== undefined,\n    };\n}\nexports.configLoader = configLoader;\n//# sourceMappingURL=config-loader.js.map","'use strict';\n\nfunction hasKey(obj, keys) {\n\tvar o = obj;\n\tkeys.slice(0, -1).forEach(function (key) {\n\t\to = o[key] || {};\n\t});\n\n\tvar key = keys[keys.length - 1];\n\treturn key in o;\n}\n\nfunction isNumber(x) {\n\tif (typeof x === 'number') { return true; }\n\tif ((/^0x[0-9a-f]+$/i).test(x)) { return true; }\n\treturn (/^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/).test(x);\n}\n\nfunction isConstructorOrProto(obj, key) {\n\treturn (key === 'constructor' && typeof obj[key] === 'function') || key === '__proto__';\n}\n\nmodule.exports = function (args, opts) {\n\tif (!opts) { opts = {}; }\n\n\tvar flags = {\n\t\tbools: {},\n\t\tstrings: {},\n\t\tunknownFn: null,\n\t};\n\n\tif (typeof opts.unknown === 'function') {\n\t\tflags.unknownFn = opts.unknown;\n\t}\n\n\tif (typeof opts.boolean === 'boolean' && opts.boolean) {\n\t\tflags.allBools = true;\n\t} else {\n\t\t[].concat(opts.boolean).filter(Boolean).forEach(function (key) {\n\t\t\tflags.bools[key] = true;\n\t\t});\n\t}\n\n\tvar aliases = {};\n\n\tfunction aliasIsBoolean(key) {\n\t\treturn aliases[key].some(function (x) {\n\t\t\treturn flags.bools[x];\n\t\t});\n\t}\n\n\tObject.keys(opts.alias || {}).forEach(function (key) {\n\t\taliases[key] = [].concat(opts.alias[key]);\n\t\taliases[key].forEach(function (x) {\n\t\t\taliases[x] = [key].concat(aliases[key].filter(function (y) {\n\t\t\t\treturn x !== y;\n\t\t\t}));\n\t\t});\n\t});\n\n\t[].concat(opts.string).filter(Boolean).forEach(function (key) {\n\t\tflags.strings[key] = true;\n\t\tif (aliases[key]) {\n\t\t\t[].concat(aliases[key]).forEach(function (k) {\n\t\t\t\tflags.strings[k] = true;\n\t\t\t});\n\t\t}\n\t});\n\n\tvar defaults = opts.default || {};\n\n\tvar argv = { _: [] };\n\n\tfunction argDefined(key, arg) {\n\t\treturn (flags.allBools && (/^--[^=]+$/).test(arg))\n\t\t\t|| flags.strings[key]\n\t\t\t|| flags.bools[key]\n\t\t\t|| aliases[key];\n\t}\n\n\tfunction setKey(obj, keys, value) {\n\t\tvar o = obj;\n\t\tfor (var i = 0; i < keys.length - 1; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (isConstructorOrProto(o, key)) { return; }\n\t\t\tif (o[key] === undefined) { o[key] = {}; }\n\t\t\tif (\n\t\t\t\to[key] === Object.prototype\n\t\t\t\t|| o[key] === Number.prototype\n\t\t\t\t|| o[key] === String.prototype\n\t\t\t) {\n\t\t\t\to[key] = {};\n\t\t\t}\n\t\t\tif (o[key] === Array.prototype) { o[key] = []; }\n\t\t\to = o[key];\n\t\t}\n\n\t\tvar lastKey = keys[keys.length - 1];\n\t\tif (isConstructorOrProto(o, lastKey)) { return; }\n\t\tif (\n\t\t\to === Object.prototype\n\t\t\t|| o === Number.prototype\n\t\t\t|| o === String.prototype\n\t\t) {\n\t\t\to = {};\n\t\t}\n\t\tif (o === Array.prototype) { o = []; }\n\t\tif (o[lastKey] === undefined || flags.bools[lastKey] || typeof o[lastKey] === 'boolean') {\n\t\t\to[lastKey] = value;\n\t\t} else if (Array.isArray(o[lastKey])) {\n\t\t\to[lastKey].push(value);\n\t\t} else {\n\t\t\to[lastKey] = [o[lastKey], value];\n\t\t}\n\t}\n\n\tfunction setArg(key, val, arg) {\n\t\tif (arg && flags.unknownFn && !argDefined(key, arg)) {\n\t\t\tif (flags.unknownFn(arg) === false) { return; }\n\t\t}\n\n\t\tvar value = !flags.strings[key] && isNumber(val)\n\t\t\t? Number(val)\n\t\t\t: val;\n\t\tsetKey(argv, key.split('.'), value);\n\n\t\t(aliases[key] || []).forEach(function (x) {\n\t\t\tsetKey(argv, x.split('.'), value);\n\t\t});\n\t}\n\n\tObject.keys(flags.bools).forEach(function (key) {\n\t\tsetArg(key, defaults[key] === undefined ? false : defaults[key]);\n\t});\n\n\tvar notFlags = [];\n\n\tif (args.indexOf('--') !== -1) {\n\t\tnotFlags = args.slice(args.indexOf('--') + 1);\n\t\targs = args.slice(0, args.indexOf('--'));\n\t}\n\n\tfor (var i = 0; i < args.length; i++) {\n\t\tvar arg = args[i];\n\t\tvar key;\n\t\tvar next;\n\n\t\tif ((/^--.+=/).test(arg)) {\n\t\t\t// Using [\\s\\S] instead of . because js doesn't support the\n\t\t\t// 'dotall' regex modifier. See:\n\t\t\t// http://stackoverflow.com/a/1068308/13216\n\t\t\tvar m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);\n\t\t\tkey = m[1];\n\t\t\tvar value = m[2];\n\t\t\tif (flags.bools[key]) {\n\t\t\t\tvalue = value !== 'false';\n\t\t\t}\n\t\t\tsetArg(key, value, arg);\n\t\t} else if ((/^--no-.+/).test(arg)) {\n\t\t\tkey = arg.match(/^--no-(.+)/)[1];\n\t\t\tsetArg(key, false, arg);\n\t\t} else if ((/^--.+/).test(arg)) {\n\t\t\tkey = arg.match(/^--(.+)/)[1];\n\t\t\tnext = args[i + 1];\n\t\t\tif (\n\t\t\t\tnext !== undefined\n\t\t\t\t&& !(/^(-|--)[^-]/).test(next)\n\t\t\t\t&& !flags.bools[key]\n\t\t\t\t&& !flags.allBools\n\t\t\t\t&& (aliases[key] ? !aliasIsBoolean(key) : true)\n\t\t\t) {\n\t\t\t\tsetArg(key, next, arg);\n\t\t\t\ti += 1;\n\t\t\t} else if ((/^(true|false)$/).test(next)) {\n\t\t\t\tsetArg(key, next === 'true', arg);\n\t\t\t\ti += 1;\n\t\t\t} else {\n\t\t\t\tsetArg(key, flags.strings[key] ? '' : true, arg);\n\t\t\t}\n\t\t} else if ((/^-[^-]+/).test(arg)) {\n\t\t\tvar letters = arg.slice(1, -1).split('');\n\n\t\t\tvar broken = false;\n\t\t\tfor (var j = 0; j < letters.length; j++) {\n\t\t\t\tnext = arg.slice(j + 2);\n\n\t\t\t\tif (next === '-') {\n\t\t\t\t\tsetArg(letters[j], next, arg);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ((/[A-Za-z]/).test(letters[j]) && next[0] === '=') {\n\t\t\t\t\tsetArg(letters[j], next.slice(1), arg);\n\t\t\t\t\tbroken = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(/[A-Za-z]/).test(letters[j])\n\t\t\t\t\t&& (/-?\\d+(\\.\\d*)?(e-?\\d+)?$/).test(next)\n\t\t\t\t) {\n\t\t\t\t\tsetArg(letters[j], next, arg);\n\t\t\t\t\tbroken = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (letters[j + 1] && letters[j + 1].match(/\\W/)) {\n\t\t\t\t\tsetArg(letters[j], arg.slice(j + 2), arg);\n\t\t\t\t\tbroken = true;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tsetArg(letters[j], flags.strings[letters[j]] ? '' : true, arg);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tkey = arg.slice(-1)[0];\n\t\t\tif (!broken && key !== '-') {\n\t\t\t\tif (\n\t\t\t\t\targs[i + 1]\n\t\t\t\t\t&& !(/^(-|--)[^-]/).test(args[i + 1])\n\t\t\t\t\t&& !flags.bools[key]\n\t\t\t\t\t&& (aliases[key] ? !aliasIsBoolean(key) : true)\n\t\t\t\t) {\n\t\t\t\t\tsetArg(key, args[i + 1], arg);\n\t\t\t\t\ti += 1;\n\t\t\t\t} else if (args[i + 1] && (/^(true|false)$/).test(args[i + 1])) {\n\t\t\t\t\tsetArg(key, args[i + 1] === 'true', arg);\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tsetArg(key, flags.strings[key] ? '' : true, arg);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!flags.unknownFn || flags.unknownFn(arg) !== false) {\n\t\t\t\targv._.push(flags.strings._ || !isNumber(arg) ? arg : Number(arg));\n\t\t\t}\n\t\t\tif (opts.stopEarly) {\n\t\t\t\targv._.push.apply(argv._, args.slice(i + 1));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tObject.keys(defaults).forEach(function (k) {\n\t\tif (!hasKey(argv, k.split('.'))) {\n\t\t\tsetKey(argv, k.split('.'), defaults[k]);\n\n\t\t\t(aliases[k] || []).forEach(function (x) {\n\t\t\t\tsetKey(argv, x.split('.'), defaults[k]);\n\t\t\t});\n\t\t}\n\t});\n\n\tif (opts['--']) {\n\t\targv['--'] = notFlags.slice();\n\t} else {\n\t\tnotFlags.forEach(function (k) {\n\t\t\targv._.push(k);\n\t\t});\n\t}\n\n\treturn argv;\n};\n","\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.register = void 0;\nvar match_path_sync_1 = require(\"./match-path-sync\");\nvar config_loader_1 = require(\"./config-loader\");\nvar noOp = function () { return void 0; };\nfunction getCoreModules(builtinModules) {\n    builtinModules = builtinModules || [\n        \"assert\",\n        \"buffer\",\n        \"child_process\",\n        \"cluster\",\n        \"crypto\",\n        \"dgram\",\n        \"dns\",\n        \"domain\",\n        \"events\",\n        \"fs\",\n        \"http\",\n        \"https\",\n        \"net\",\n        \"os\",\n        \"path\",\n        \"punycode\",\n        \"querystring\",\n        \"readline\",\n        \"stream\",\n        \"string_decoder\",\n        \"tls\",\n        \"tty\",\n        \"url\",\n        \"util\",\n        \"v8\",\n        \"vm\",\n        \"zlib\",\n    ];\n    var coreModules = {};\n    for (var _i = 0, builtinModules_1 = builtinModules; _i < builtinModules_1.length; _i++) {\n        var module_1 = builtinModules_1[_i];\n        coreModules[module_1] = true;\n    }\n    return coreModules;\n}\n/**\n * Installs a custom module load function that can adhere to paths in tsconfig.\n * Returns a function to undo paths registration.\n */\nfunction register(params) {\n    var cwd;\n    var explicitParams;\n    if (params) {\n        cwd = params.cwd;\n        if (params.baseUrl || params.paths) {\n            explicitParams = params;\n        }\n    }\n    else {\n        // eslint-disable-next-line\n        var minimist = require(\"minimist\");\n        var argv = minimist(process.argv.slice(2), {\n            // eslint-disable-next-line id-denylist\n            string: [\"project\"],\n            alias: {\n                project: [\"P\"],\n            },\n        });\n        cwd = argv.project;\n    }\n    var configLoaderResult = (0, config_loader_1.configLoader)({\n        cwd: cwd !== null && cwd !== void 0 ? cwd : process.cwd(),\n        explicitParams: explicitParams,\n    });\n    if (configLoaderResult.resultType === \"failed\") {\n        console.warn(\"\".concat(configLoaderResult.message, \". tsconfig-paths will be skipped\"));\n        return noOp;\n    }\n    var matchPath = (0, match_path_sync_1.createMatchPath)(configLoaderResult.absoluteBaseUrl, configLoaderResult.paths, configLoaderResult.mainFields, configLoaderResult.addMatchAll);\n    // Patch node's module loading\n    // eslint-disable-next-line @typescript-eslint/no-require-imports,@typescript-eslint/no-var-requires\n    var Module = require(\"module\");\n    // eslint-disable-next-line no-underscore-dangle\n    var originalResolveFilename = Module._resolveFilename;\n    var coreModules = getCoreModules(Module.builtinModules);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,no-underscore-dangle\n    Module._resolveFilename = function (request, _parent) {\n        var isCoreModule = coreModules.hasOwnProperty(request);\n        if (!isCoreModule) {\n            var found = matchPath(request);\n            if (found) {\n                var modifiedArguments = __spreadArray([found], [].slice.call(arguments, 1), true); // Passes all arguments. Even those that is not specified above.\n                return originalResolveFilename.apply(this, modifiedArguments);\n            }\n        }\n        return originalResolveFilename.apply(this, arguments);\n    };\n    return function () {\n        // Return node's module loading to original state.\n        // eslint-disable-next-line no-underscore-dangle\n        Module._resolveFilename = originalResolveFilename;\n    };\n}\nexports.register = register;\n//# sourceMappingURL=register.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadConfig = exports.register = exports.matchFromAbsolutePathsAsync = exports.createMatchPathAsync = exports.matchFromAbsolutePaths = exports.createMatchPath = void 0;\n// register is used from register.js in root dir\nvar match_path_sync_1 = require(\"./match-path-sync\");\nObject.defineProperty(exports, \"createMatchPath\", { enumerable: true, get: function () { return match_path_sync_1.createMatchPath; } });\nObject.defineProperty(exports, \"matchFromAbsolutePaths\", { enumerable: true, get: function () { return match_path_sync_1.matchFromAbsolutePaths; } });\nvar match_path_async_1 = require(\"./match-path-async\");\nObject.defineProperty(exports, \"createMatchPathAsync\", { enumerable: true, get: function () { return match_path_async_1.createMatchPathAsync; } });\nObject.defineProperty(exports, \"matchFromAbsolutePathsAsync\", { enumerable: true, get: function () { return match_path_async_1.matchFromAbsolutePathsAsync; } });\nvar register_1 = require(\"./register\");\nObject.defineProperty(exports, \"register\", { enumerable: true, get: function () { return register_1.register; } });\nvar config_loader_1 = require(\"./config-loader\");\nObject.defineProperty(exports, \"loadConfig\", { enumerable: true, get: function () { return config_loader_1.loadConfig; } });\n//# sourceMappingURL=index.js.map","import Messager from 'apps/backend/message';\r\nimport { app, BrowserWindow } from 'electron';\r\nimport path from 'path';\r\nimport { register } from 'tsconfig-paths';\r\n\r\n// Register path aliases for the compiled output\r\nregister({\r\n    baseUrl: path.join(__dirname, '../..'),\r\n    paths: {\r\n        decompiler: ['packages/decompiler'],\r\n        decoder: ['packages/decoder'],\r\n        utils: ['packages/utils']\r\n    }\r\n});\r\n\r\napp.once('ready', () => {\r\n    Messager.on('ping', data => {\r\n        console.log('Received ping:', data);\r\n        Messager.send('pong', { message: 'Pong!' });\r\n    });\r\n\r\n    console.log('App is ready');\r\n\r\n    Messager.initialize();\r\n\r\n    const win = new BrowserWindow({\r\n        width: 600,\r\n        height: 400,\r\n        webPreferences: {\r\n            nodeIntegration: true,\r\n            contextIsolation: false\r\n        }\r\n    });\r\n\r\n    if (process.env.NODE_ENV === 'development') {\r\n        // In development, load from Vite dev server\r\n        win.loadURL('http://localhost:5173').catch(e => console.error(e));\r\n\r\n        // Open DevTools automatically in development\r\n        win.webContents.openDevTools();\r\n    } else {\r\n        // In production, load the built file\r\n        const rendererHtmlPath = path.join(__dirname, '../frontend/index.html');\r\n        win.loadFile(rendererHtmlPath).catch(e => console.error(e));\r\n    }\r\n});\r\n"],"names":["BrowserWindow","window","ipcMain","fs","path","require","require$$0","key","require$$1","physicalPathPattern","tryPath","Filesystem","MappingEntry","require$$2","TryPath","require$$3","findFirstExistingPath","findFirstExistingMainFieldMappedFile","fileExistsAsync","c","parse","token","buffer","stringify","stack","value","JSON5","this","configLoader_1","tsConfigLoader","arg","i","register_1","minimist","match_path_sync_1","config_loader_1","register","app"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12]}